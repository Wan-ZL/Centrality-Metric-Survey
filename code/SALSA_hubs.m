function SALSAC = SALSA_hubs(G_graph, step_n)
%
%	Input:  G_graph, the graph structure generated by Matlab function 'G=digraph()'.
%           step_n: the step (I use step_n = 2 in test)
%           (directed)
%   
%   Output: SALSAC: SALSAC Centrality
% 
%   Author: Zelin Wan
% 
%   Reference: R. Lempel and S. Moran, “The stochastic approach for 
%   link-structure analysis (salsa) and the tkc effect,” Computer Networks,
%   vol. 33, no. 1, pp. 387 – 401, 2000.
% 
%   Note: V_H start from left to top, V_A start from top to left in matrix.

graph_matrix = full(adjacency(G_graph));
node_number = length(graph_matrix);
SALSAC = ones(node_number, 1);


H = zeros(node_number, node_number);
% skip_graph = graph_matrix * ones(node_number,1) + graph_matrix' * ones(node_number,1);

all_indegree = 1./indegree(G_graph);
all_outdegree = 1./outdegree(G_graph);

parfor node_index_x = 1:node_number
%     if skip_graph(node_index_x) == 0        % skip deleted node for save time
%         continue;
%     end
    for node_index_i = 1:node_number
%         if skip_graph(node_index_i) == 0        % skip deleted node for save time
%             continue;
%         end
        for node_index_j = 1:node_number
%             if skip_graph(node_index_j) == 0        % skip deleted node for save time
%                 disp("skip");
%                 continue;
%             end
            if graph_matrix(node_index_i, node_index_x) == 1 && graph_matrix(node_index_j, node_index_x)   % if i_h connect to x_a, j_h connect to x_a
                H(node_index_x,node_index_i) = (all_outdegree(node_index_i)*all_indegree(node_index_x)) + H(node_index_x,node_index_i);
            
            end
        end
    end
end

% disp(H);



for i = 1:step_n
    SALSAC = H * SALSAC;
end

% disp(SALSAC');



end

