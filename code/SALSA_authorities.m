function SALSAC = SALSA_authorities(G_graph,graph_matrix, step_n)
%
%	Input:  G_graph, the graph structure generated by Matlab function 'G=graph()'.
%           graph_matrix: adjacency matrix
%           step_n: the step (I use step_n = 2 in test)
%           (directed)
%   
%   Output: SALSAC: SALSAC Centrality
% 
%   Author: Zelin Wan
% 
%   Reference: R. Lempel and S. Moran, “The stochastic approach for 
%   link-structure analysis (salsa) and the tkc effect,” Computer Networks,
%   vol. 33, no. 1, pp. 387 – 401, 2000.
% 
%   Note: V_H start from left to top, V_A start from top to left in matrix.

% disp('start');
node_number = length(graph_matrix);
SALSAC = ones(node_number, 1);
skip_graph = graph_matrix * ones(node_number,1) + graph_matrix' * ones(node_number,1);

A = zeros(node_number, node_number);

all_indegree = indegree(G_graph);
all_outdegree = outdegree(G_graph);
disp("precalc finish");
parfor node_index_x = 1:node_number
    if skip_graph(node_index_x) == 0        % skip deleted node for save time
        continue;
    end
    for node_index_i = 1:node_number
        if skip_graph(node_index_i) == 0        % skip deleted node for save time
            continue;
        end
        for node_index_j = 1:node_number
            if skip_graph(node_index_j) == 0        % skip deleted node for save time
                continue;
            end
            if graph_matrix(node_index_x, node_index_i) == 1 && graph_matrix(node_index_x, node_index_j)   % if a_h connect to i_a, x_h connect to j_a
%                 A(node_index_x,node_index_i) = ((1/indegree(G_graph, node_index_i))*(1/outdegree(G_graph, node_index_x))) + A(node_index_x,node_index_i);
                  A(node_index_x,node_index_i) = ((1/all_indegree(node_index_i))*(1/all_outdegree(node_index_x))) + A(node_index_x,node_index_i);

            end
        end
    end
end




for i = 1:step_n
    SALSAC = A * SALSAC;
end

end

