function DBGC = Distance_based_GC(G_graph)
% Input:  G_graph, the graph structure generated by Matlab function 'G=digraph()'.
% Output: DBGC: Distance based graph centrality
% 
% Author: Zelin Wan
% Reference: L. C. Freeman, “Centrality in social networks concep- tual 
%           clarification,” Social Networks, vol. 1, pp. 215–239, 1978.
%           A. Shimbel, “Structural parameters of communication networks,” 
%           The bulletin of mathematical biophysics, vol. 15, no. 4, pp. 501–507, Dec. 1953.

node_number = numnodes(G_graph);
% result_vector = zeros(node_number, 1);

all_distance = distances(G_graph);
% make all infinity to zero
all_distance(isinf(all_distance)) = 0;
% disp(all_distance);


DBGC = sum(all_distance, 'all');

% % skip_graph = graph_matrix * ones(node_number,1) + graph_matrix' * ones(node_number,1);
% parfor i = 1:node_number
% %     disp(i);
% %     if isempty(neighbors(G_graph,i))        % skip deleted node for save time
% %         continue;
% %     end
%     for j = 1:node_number
% %         if isempty(neighbors(G_graph,j))        % skip deleted node for save time
% %             continue;
% %         end
%         
%         distance = length(shortestpath(G_graph, i, j));
%         disp(all_distance(i,j));
%         disp(distance);
%         disp("===");
%         result_vector(i) = result_vector(i) + distance;
%         
%         
%         
%     end
% end
% DBGC = sum(result_vector);
end


